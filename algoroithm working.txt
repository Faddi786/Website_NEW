@app.route('/get_list')
def get_list():

    if name == "receiver form"
    excel = "Excel/receiver_form.xlsx"
    name = session.get('login_row_data', {}).get('ToPerson', 'Unknown')
    total_rows = get_total_rows(excel,name)

    if name == "Approve sender form"
    excel = "Excel/approve_sender_form.xlsx"
    name = session.get('login_row_data', {}).get('FromProject', 'Unknown')
    total_rows = get_total_rows(excel,name)

    if name == "Approve receiver form"
    excel = "Excel/approve_receiver_form.xlsx"
    name = session.get('login_row_data', {}).get('ToProject', 'Unknown')
    total_rows = get_total_rows(excel,name)

    #print("This is the total number of digit without floating point for approval send get link number",last_digit)
    return str(total_rows)


def process_excel(file_path):
    try:
        # Load the Excel workbook
        wb = openpyxl.load_workbook(file_path)
        
        # Select the active worksheet
        ws = wb.active
        
        # Find the column index based on column names in the first row
        headers = [cell.value for cell in ws[1]]  # Assuming headers are in the first row
        serial_no_column_index = headers.index('Serial No') + 1  # Adding 1 to convert to 1-based indexing
        print("Serial No column index:", serial_no_column_index)
        
        # Get values from Serial_No column and convert to a list of strings
        serial_nos = [str(cell.value) for row in ws.iter_rows(min_row=2, min_col=serial_no_column_index, max_col=serial_no_column_index) for cell in row if cell.value is not None]
        print("Serial Nos from Excel:", serial_nos)
        
        # Correct the versions
        corrected_versions = correct_versions(serial_nos)
        print("Corrected versions:", corrected_versions)
        
        if corrected_versions is None:
            print("No corrected versions were generated. Exiting...")
            return
        
        # Write corrected values back to Serial_No column
        for i, corrected_version in enumerate(corrected_versions):
            ws.cell(row=i+2, column=serial_no_column_index, value=corrected_version)
        
        # Save the changes
        wb.save(file_path)
        print("Corrections saved to Excel.")
    
    except Exception as e:
        print("An error occurred:", e)


def get_total_rows(excel, name):

    process_excel(excel)

    # Load the Excel workbook
    wb = openpyxl.load_workbook(excel)

    # Access the sheet named 'Tom'
    sheet = wb[name]
    
    # Get the values from the 'Serial No' column
    serial_numbers = [cell.value for cell in sheet['C'] if cell.value is not None]
    
    # Extract the last number
    last_serial_number = serial_numbers[-1]
    
    # Extract the digit before the decimal point
    last_digit = int(str(last_serial_number).split('.')[0])

    print(last_digit)
    
    return last_digit

