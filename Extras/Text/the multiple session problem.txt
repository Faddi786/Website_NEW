app.secret_key = b'_5#y2L"F4Q8z\n\xec]/'

        # Get the name from session data
        name = session.get('login_row_data', {}).get('Name', 'Unknown')
        print("this is the global employee name", name)


when i login into an account
@app.route('/login', methods=['POST'])
def login():
    user_id = request.form['id']
    password = request.form['password']
    print(user_id,password)
    # Check if ID and password exist in the user_data DataFrame
    matched_rows = user_data[(user_data['ID'] == user_id) & (user_data['Password'] == password)]
    global employee_name
    if not matched_rows.empty:
        # Extract type of account
        account_type = matched_rows.iloc[0]['Type Of Account']
        
        # Store the entire row data in session
        session['login_row_data'] = matched_rows.iloc[0].to_dict()
        print("this is session dataaa  ", session['login_row_data'])
                # Get the name from session data
        employee_name = session.get('login_row_data', {}).get('Name', 'Unknown')
        # Redirect based on account type
        if account_type == 'Manager':
            return redirect(url_for('manager'))
        elif account_type == 'Employee':
            return redirect(url_for('employee'))
        else:
            return "Unknown account type"
    else:
        return "Account not found"

the session data is being stored but if multiple users access my account then the data variable is being overwritten whereas i wanted the website to hold the values individually for each user